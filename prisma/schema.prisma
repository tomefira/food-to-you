datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Customer {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  password      String
  address       String
  createdAt     DateTime  @default(now())
  firstName     String
  lastName      String
  mobileNum     String
  orders        Order[]
  cart          Cart?
}

model Restaurant {
  id             Int       @id @default(autoincrement())
  name           String
  email          String    @unique
  password       String
  address        String
  distance       Int       @default(0)
  rating         Int       @default(1)
  createdAt      DateTime  @default(now())
  products       Product[]
  orders         Order[]
}

model Order {
  id              Int      @id @default(autoincrement())
  orderID         String   @unique
  restaurantID    Int
  customerID      Int
  productIDs      String[]
  orderDateTime   DateTime
  deliveryAddress String
  orderStatus     OrderStatus  @default(pending)
  deliveryStatus  DeliveryStatus  @default(preparing)
  totalCost       Float
  isCompleted     Boolean  @default(false)
  completedAt     DateTime?

  customer        Customer  @relation(fields: [customerID], references: [id])
  restaurant      Restaurant  @relation(fields: [restaurantID], references: [id])
}

model Product {
  id            Int      @id @default(autoincrement())
  productID     String   @unique
  productName   String
  productCost   Float
  restaurantID  Int

  restaurant    Restaurant  @relation(fields: [restaurantID], references: [id])
  carts         Cart[]  @relation("CartProducts")
}

model Cart {
  id            Int       @id @default(autoincrement())
  customerID    Int       @unique
  products      Product[] @relation("CartProducts")

  customer      Customer  @relation(fields: [customerID], references: [id])
}

enum OrderStatus {
  pending
  accepted
  rejected
  completed
}

enum DeliveryStatus {
  preparing
  driving
  delivered
}
